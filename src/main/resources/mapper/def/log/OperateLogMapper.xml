<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.platform.managecenter.dao.def.log.OperateLogMapper" >
  <resultMap id="BaseResultMap" type="com.cn.platform.managecenter.entity.log.OperateLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="business" property="business" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>


  <sql id="Base_Column_List" >
    id, business, type, content, operator, create_time, remark
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from trip_operate_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from trip_operate_log
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.cn.platform.managecenter.entity.log.OperateLog" >
    insert into trip_operate_log (id, business, type, 
      content, operator, create_time, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{business,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{operator,jdbcType=INTEGER},now(),
      #{remark,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.cn.platform.managecenter.entity.log.OperateLog" >
    update trip_operate_log
    set business = #{business,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--新添加-->
  <sql id="queryPageCommonWhere">
    1=1
    <if test="name !=null  and name !=''">
      and (p.business like concat('%',#{name},'%') )
    </if>
  </sql>


  <select id="queryOperateLogConfigCount" parameterType="map" resultType="long">
    select count(1) from trip_operate_log p
    <where>
      <include refid="queryPageCommonWhere"/>
    </where>
  </select>

  <select id="queryOperateLogsListPage" parameterType="map" resultType="map">
    select p.id,p.business,p.type,p.content,p.operator,DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%S') as create_time from trip_operate_log p
    <where>
      <include refid="queryPageCommonWhere"/>
    </where>
    order by p.CREATE_TIME DESC
    <if test="pageEnd!=null and pageEnd!=''">
      limit #{pageStart},#{pageEnd}
    </if>
  </select>
</mapper>